<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: release | Ethereum J]]></title>
  <link href="http://ethereumj.io/blog/categories/release/atom.xml" rel="self"/>
  <link href="http://ethereumj.io/"/>
  <updated>2015-08-03T15:47:35-04:00</updated>
  <id>http://ethereumj.io/</id>
  <author>
    <name><![CDATA[Roman Mandeleil]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Release: 1.0.0-RC1]]></title>
    <link href="http://ethereumj.io/blog/2015/07/29/release-1-0-0-RC1/"/>
    <updated>2015-07-29T17:03:57-04:00</updated>
    <id>http://ethereumj.io/blog/2015/07/29/release-1-0-0-RC1</id>
    <content type="html"><![CDATA[<p><img class="right" src="/images/posts/release-ilustration-1.gif" title="Release 1.0.0-RC1" ></p>

<p>That version is first of the RC series for Frontier network.</p>

<p> Ethereum(J) is the library that can be embedded in any Java/Scala project
 and to provide full support for Ethereum protocol and sub services.a</p>

<h5>Getting Started</h5>

<p>To get started and include a java library into your project all you need is
to <!--more--> use your favorite build system, here is Maven and Gradlle snippet:</p>

<p><figure class='code'><figcaption><span>Maven Snippet <a href="https://gist.github.com/romanman/659e9e5b6b44b73b5755">https://gist.github.com/romanman/659e9e5b6b44b73b5755</a> </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;br/&gt;</span>
</span><span class='line'>   <span class="nt">&lt;repositories&gt;</span>
</span><span class='line'>     <span class="nt">&lt;repository&gt;</span>
</span><span class='line'>       <span class="nt">&lt;id&gt;</span>oss.jfrog.org<span class="nt">&lt;/id&gt;</span>
</span><span class='line'>       <span class="nt">&lt;name&gt;</span>Repository from JFrog<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>       <span class="nt">&lt;url&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://oss.jfrog.org/simple/oss-snapshot-local/&quot;</span><span class="nt">&gt;</span>http://oss.jfrog.org/simple/oss-snapshot-local/<span class="nt">&lt;/a&gt;&lt;/url&gt;</span>
</span><span class='line'>     <span class="nt">&lt;/repository&gt;</span>
</span><span class='line'>   <span class="nt">&lt;/repositories&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>   <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>     <span class="nt">&lt;groupId&gt;</span>org.ethereum<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>     <span class="nt">&lt;artifactId&gt;</span>ethereumj-core<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>     <span class="nt">&lt;version&gt;</span> 1.0.0-RC1 <span class="nt">&lt;/version&gt;</span>
</span><span class='line'>     <span class="nt">&lt;type&gt;</span>zip<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>   <span class="nt">&lt;/dependency&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>or</p>

<p><figure class='code'><figcaption><span>Gradle Snippet <a href="https://gist.github.com/romanman/cc82a7a698f800040e10">https://gist.github.com/romanman/cc82a7a698f800040e10</a> </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="o">&lt;</span><span class="s">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s">&lt;p&gt;   repositories {</span>
</span><span class='line'><span class="s">     maven {</span>
</span><span class='line'><span class="s">      url &amp;ldquo;&lt;a href=&quot;https://oss.jfrog.org/</span><span class="n">libs</span><span class="o">-</span><span class="n">snapshot</span><span class="err">&quot;</span><span class="o">&gt;</span><span class="nl">https:</span><span class="c1">//oss.jfrog.org/libs-snapshot&lt;/a&gt;&amp;rdquo;</span>
</span><span class='line'>     <span class="o">}</span>
</span><span class='line'>    <span class="o">}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>   <span class="n">compile</span> <span class="o">(&amp;</span><span class="n">ldquo</span><span class="o">;</span><span class="n">org</span><span class="o">.</span><span class="na">ethereum</span><span class="o">:</span><span class="n">ethereumj</span><span class="o">-</span><span class="nl">core:</span><span class="mf">1.0</span><span class="o">.</span><span class="mi">0</span><span class="o">-</span><span class="n">RC1</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="o">;)</span>
</span></code></pre></td></tr></table></div></figure></p>

<p> Also we have very simple starter example - just do:
 <code>git clone https://github.com/ether-camp/ethereumj.starter</code>
   and you are ready to develop your first Ethereum application.
   Also it can be usefull to browse the code and study how ethereumj
   library is weaved into the application:
   <a href="https://github.com/ether-camp/ethereumj.starter">https://github.com/ether-camp/ethereumj.starter</a></p>

<p> <em>So, what is in:</em></p>

<h5>RLPx network layer for channel protection</h5>

<p>  Between each connected peers on the Ethereum network
  there is a security mechanism called RLPx - designed to provide
  an extremly protected channel by sophisticated encryption and decryption
  algorithm for all of the underlying traffic.</p>

<ul>
<li><code>org.ethereum.net.rlpx</code> - package providing full implementation for the RLPx protocol.</li>
</ul>


<h5>Peer Discovery</h5>

<p>  The peer discovery is Ethereum way to manage network topology and to provide the
  peer with best view of the network. Each peer tries over time to find best neighbours
  and to exchange information about sub protocols with them. That is beeing achieved
  by managing statistic table over the found peers by constant ongoing process.</p>

<ul>
<li><code>org.ethereum.net.rlpx.discover</code> - package providing full implementation for peer disovery protocol.</li>
</ul>


<h5>Multi Peer Blockchain Syncronization</h5>

<p>  The Ethereum protocol supports fast block chain download - using
  bittorent way of downloading multiple blocks simultaneously from different channels.</p>

<ul>
<li><code>org.ethereum.net.eth</code> - package providing full support of Eth subprotocol and multipeer blockschain synchronization</li>
</ul>


<h5>Full Ethereum VM Support</h5>

<p>  The heart of the Ethereum consensus protocol is the virtual machine.
  The virtual machines is running the contracts algorithms exactly the
  same way on all the peers, tested and compatible with all the implementations.</p>

<ul>
<li><code>org.ethereum.vm</code></li>
<li><code>org.ethereum.core</code> - packages providing full Ethereum virtual machine and consensys mechanism implementation</li>
</ul>


<h5>Ethereum Repository Updates and Manipulations</h5>

<p> The data structure that supports consensys validation
 algorithm, and eventually holding the full list of
 ethereum affairs is called Ethereum Repository.
 It makes masive use for Ethereum Trie data structure.
 More info about that magic Trie can be study <a href="/blog/2015/07/05/Ethereum-Trie/">here</a></p>

<ul>
<li><code>org.ethereum.repository</code> - package providing full Ethereum repository implementation</li>
</ul>


<h5>Testing Notes</h5>

<p> The EthereumJ librarey was tested on more than 830k blocks from POC-9 Olympics network and more than 7 million transactions, with final result of full consensus achieved.</p>

<p> The library supports 99% of compatabiltiy kit test cases. We support almost all test cases defined by
 Ethereum development group, the several adge cases that we formally do not support, which we decided to exclude
 at that stage for performance optimization.</p>

<h5>More Code Samples</h5>

<p> Another good place get started is to go and try code samples from our samples repository  <a href="https://github.com/ethereum/ethereumj/tree/develop/ethereumj-core/src/main/java/org/ethereum/samples">repository</a>
 you can run them right away after fetching them from the git.</p>
]]></content>
  </entry>
  
</feed>
