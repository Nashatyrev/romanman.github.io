<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: release | Ethereum J]]></title>
  <link href="http://ethereumj.io/blog/categories/release/atom.xml" rel="self"/>
  <link href="http://ethereumj.io/"/>
  <updated>2015-07-30T09:16:56-04:00</updated>
  <id>http://ethereumj.io/</id>
  <author>
    <name><![CDATA[Roman Mandeleil]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Release: 1.0.0-RC1]]></title>
    <link href="http://ethereumj.io/blog/2015/07/29/release-1-0-0-RC1/"/>
    <updated>2015-07-29T17:03:57-04:00</updated>
    <id>http://ethereumj.io/blog/2015/07/29/release-1-0-0-RC1</id>
    <content type="html"><![CDATA[<p>{% img right /images/posts/release-ilustration-1.gif Release 0.9.7-alpha %}</p>

<p>That version is first of the RC series for Frontier network.</p>

<p> Ethereum(J) is the library that can be embedded in any Java/Scala project
 and to provide full support for Ethereum protocol and sub services.</p>

<h5>Getting Started</h5>

<p>To get started and include a java library into your project all you need is
to <!--more--> use your favorite build system, here is Maven and Gradlle snippet:</p>

<p>{% codeblock Maven Snippet lang:xml <a href="https://gist.github.com/romanman/659e9e5b6b44b73b5755%">https://gist.github.com/romanman/659e9e5b6b44b73b5755%</a>}<br/>
   <repositories>
     <repository>
       <id>oss.jfrog.org</id>
       <name>Repository from JFrog</name>
       <url><a href="http://oss.jfrog.org/simple/oss-snapshot-local/">http://oss.jfrog.org/simple/oss-snapshot-local/</a></url>
     </repository>
   </repositories></p>

<p>   <dependency>
     <groupId>org.ethereum</groupId>
     <artifactId>ethereumj-core</artifactId>
     <version> 1.0.0-RC1 </version>
     <type>zip</type>
   </dependency>
{% endcodeblock %}</p>

<p>or</p>

<p>{% codeblock Gradle Snippet lang:groovy <a href="https://gist.github.com/romanman/cc82a7a698f800040e10">https://gist.github.com/romanman/cc82a7a698f800040e10</a> %}</p>

<p>   repositories {
     maven {
      url &ldquo;<a href="https://oss.jfrog.org/libs-snapshot">https://oss.jfrog.org/libs-snapshot</a>&rdquo;
     }
    }</p>

<p>   compile (&ldquo;org.ethereum:ethereumj-core:1.0.0-RC1&rdquo;)
{% endcodeblock %}</p>

<p> So, what is in:</p>

<h5>RLPx network layer for channel protection</h5>

<p> Between each connected peers on the Ethereum network
 there is a protection mechanism for encryption and decryption
 for all of the underlying traffic.</p>

<p> <code>org.ethereum.net.rlpx</code> - package is full implementation for the RLPx protocol</p>

<h5>Peer Discovery</h5>

<p> The peer discovery is ethereum way to manage network topology. Each peer
 tries over time to find best neighbours to exchange information with.
 That is beeing achieved by managing statistic table over the connected peers.</p>

<p> <code>org.ethereum.net.rlpx.discover</code> - is full implementation for peer disovery protocol</p>

<h5>Multi Peer Blockchain Syncronization</h5>

<p> The Ethereum protocol supports fast block chain download - using
 bittorent way of downloading multiple blocks simultaneously from different channels</p>

<p> <code>org.ethereum.net.eth</code> - us full support of Eth subprotocol and multipeer blocks download</p>

<h5>Full Ethereum VM Support</h5>

<p> The heart of the Ethereum consensus protocol is the virtual machine.
 The virtual machines is running the contracts algorithms exactly the
 same way on all the peers, tested and compatible with all implementations.</p>

<p> <code>org.ethereum.vm</code> - full Ethereum Virtual Machine implemented]</p>

<h5>Ethereum Repository Updates and Manipulations</h5>

<p> The data structure that supports consensys validation
 algorithm, and eventually holding the full list of
 ethereum affairs is called Ethereum Repository.
 It embrace Ethereum Trie protocol, more can be
 study <a href="/blog/2015/07/05/Ethereum-Trie/">here</a></p>

<p> <code>org.ethereum.repository</code> - full Ethereum Virtual Machine implemented</p>

<h5>Testing Notes</h5>

<p> The EthereumJ librarey Was tested on more than 800k blocks from POC-9 Olympics network and more than 7 million transactions, with final result of full consensus achieved.</p>

<p> The library supports 99% of compatabiltiy kit test case. We support almost all test cases defined by
 Ethereum development group, the several adge cases that we formally not support we decided to exclude
 at that stage for performance optimization.</p>

<h5>More Code Samples</h5>

<p> Another good place get started is to go and try code samples from our smples repository  <a href="https://github.com/ethereum/ethereumj/tree/develop/ethereumj-core/src/main/java/org/ethereum/samples">repository</a>
 you can run them right away after fetching them from the git.</p>
]]></content>
  </entry>
  
</feed>
